{"version":3,"sources":["NavBar/NavBar.tsx","profile.tsx","workout.tsx","util/textUtil.tsx","util/workoutUtil.tsx","Home/Home.tsx","Calendar/Calendar.tsx","Programs/Programs.tsx","Workout/Workout.tsx","App.tsx","index.tsx"],"names":["NavBar","Box","AppBar","position","Toolbar","Typography","variant","noWrap","component","sx","flexGrow","IconButton","size","color","activeStyle","textDecoration","className","to","myProfile","program","name","movements","daysPerWeek","4","1","2","3","setScheme","weeks","primary","percent","sets","auxiliary","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","programSettings","lifts","p1","p2","p3","p4","p1a1","p1a2","p2a1","p2a2","p3a1","p4a1","day","week","roundingSettings","rounding","microPlates","weight","date","Date","deadlift","titleCaseString","input","split","map","word","length","toUpperCase","slice","join","getWorkoutForDay","profile","weightScheme","lift","liftType","specificLift","Error","liftDetails","Math","round","styles","backgroundStyle","height","width","boxStyle","backgroundColor","padding","boxLeft","paddingRight","boxRight","paddingLeft","dashboardContent","border","paddingBottom","dashboardBoxTitle","borderBottom","margin","fontSize","workoutPreviewContainer","workoutTitle","marginBottom","workoutWeight","Home","todaysWorkout","yesterdaysWorkout","getLastWorkout","Grid","container","item","xs","sm","workout","Calendar","Programs","page","contentContainer","maxWidth","workoutContainerTitle","justifyContent","alignItems","daySelector","dayDropdown","marginLeft","marginRight","dropdown","dropdownContainer","movementsContainer","movementName","movementWeight","setCounter","borderRadius","display","setContainer","cursor","completedSet","Workout","useState","setWeek","setDay","currentWorkout","setCurrentWorkout","completedSets","setCompletedSets","useEffect","FormControl","InputLabel","id","Select","labelId","value","label","onChange","event","target","Object","keys","weekNumber","MenuItem","parseInt","Array","from","val","set","index","completed","includes","console","log","onClick","movement","setNumber","filter","push","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d1971145.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport { NavLink } from 'react-router-dom';\nimport './navBar.css'\n\nexport const NavBar = () => {\n  return (\n    <Box>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component=\"div\"\n          >\n            Adonis\n          </Typography>\n          <Box sx={{ flexGrow: 1 }} />\n          <Box>\n            <IconButton size=\"small\" color=\"inherit\">\n              <NavLink activeStyle={{ textDecoration: 'underline' }} className=\"navBarButton\" to=\"/home\">Home</NavLink>\n            </IconButton>\n            <IconButton size=\"small\" color=\"inherit\">\n              <NavLink activeStyle={{ textDecoration: 'underline' }} className=\"navBarButton\" to=\"/workout\">Workout</NavLink>\n            </IconButton>\n            <IconButton size=\"small\" color=\"inherit\">\n              <NavLink activeStyle={{ textDecoration: 'underline' }} className=\"navBarButton\" to=\"/programs\">Programs</NavLink>\n            </IconButton>\n            <IconButton size=\"small\" color=\"inherit\">\n              <NavLink activeStyle={{ textDecoration: 'underline' }} className=\"navBarButton\" to=\"/calendar\">Calendar</NavLink>\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n","import { program, SBS_RTF } from './workout';\n\nexport type liftName = 'bench press'\n  | 'back squat'\n  | 'deadlift'\n  | 'overhead press'\n  | 'front squat'\n  | 'paused squat'\n  | 'close grip bench press'\n  | 'spoto press'\n  | 'incline press'\n  | 'sumo deadlift'\n  | 'seated overhead press'\n  | 'push press'\n  | 'romanian deadlift'\n  | 'block deadlift'\n\nexport interface roundingSettings {\n  rounding: number;\n  microPlates: boolean;\n}\n\nexport interface lift {\n  weight: number;\n  date: Date;\n}\n\nexport interface profile {\n  program: program;\n  programSettings: {\n    lifts: {\n      [key: string]: liftName;\n    };\n    week: number;\n    day: number;\n    daysPerWeek: number;\n  }\n  roundingSettings: roundingSettings;\n  lifts: {\n    [key in liftName]?: lift[];\n  };\n}\n\nexport const myProfile: profile = {\n  program: SBS_RTF,\n  programSettings: {\n    lifts: {\n      p1: 'back squat',\n      p2: 'bench press',\n      p3: 'deadlift',\n      p4: 'overhead press',\n      p1a1: 'front squat',\n      p1a2: 'paused squat',\n      p2a1: 'close grip bench press',\n      p2a2: 'spoto press',\n      p3a1: 'block deadlift',\n      p4a1: 'seated overhead press'\n    },\n    day: 3,\n    week: 2,\n    daysPerWeek: 4\n  },\n  roundingSettings: {\n    rounding: 5,\n    microPlates: false\n  },\n  lifts: {\n    'bench press': [{\n      weight: 225,\n      date: new Date('2021/11/01')\n    }],\n    'back squat': [{\n      weight: 275,\n      date: new Date('2021/11/01')\n    }],\n    'overhead press': [{\n      weight: 135,\n      date: new Date('2021/11/01')\n    }],\n    deadlift: [{\n      weight: 315,\n      date: new Date('2021/11/01')\n    }],\n    'front squat': [{\n      weight: 315,\n      date: new Date('2021/11/01')\n    }],\n    'paused squat': [{\n      weight: 315,\n      date: new Date('2021/11/01')\n    }],\n    'close grip bench press': [{\n      weight: 315,\n      date: new Date('2021/11/01')\n    }],\n    'spoto press': [{\n      weight: 315,\n      date: new Date('2021/11/01')\n    }],\n    'block deadlift': [{\n      weight: 315,\n      date: new Date('2021/11/01')\n    }],\n    'seated overhead press': [{\n      weight: 315,\n      date: new Date('2021/11/01')\n    }],\n  }\n}","export const progressionSchemes = {\n\n}\n\nexport interface weekMovements {\n  [key: number]: string[];\n}\n\nexport interface program {\n  name: string;\n  movements: string[];\n  daysPerWeek: {\n    [key: number]: weekMovements;\n  };\n  setScheme: setScheme;\n}\n\nexport interface movement {\n  percent: number;\n  sets: number[];\n}\n\nexport interface weightScheme {\n  primary: movement;\n  auxiliary: movement;\n}\n\nexport interface setScheme {\n  weeks: {\n    [key: number]: weightScheme;\n  };\n}\n\nexport const calculateNextTrainingMaxDeltaPercentage = (targetReps: number, actualReps: number) : number => {\n  const repDiff = targetReps - actualReps;\n  switch (repDiff) {\n    case 5:\n      return 3;\n    case 4:\n      return 2;\n    case 3:\n      return 1.5;\n    case 2:\n      return 1;\n    case 1:\n      return 0.5;\n    case 0:\n      return 0;\n    case -1:\n      return -2;\n    case -2:\n      return -5;\n    default:\n      return repDiff > 0 ? 3 : -5;\n  }\n}\n\nexport const SBS_RTF_SET_SCHEME: setScheme = {\n  weeks: {\n    1: {\n      primary: {\n        percent: 70,\n        sets: [5,5,5,5,10]\n      },\n      auxiliary: {\n        percent: 60,\n        sets: [7,7,7,7,14]\n      }\n    },\n    2: {\n      primary: {\n        percent: 75,\n        sets: [4,4,4,4,8]\n      },\n      auxiliary: {\n        percent: 65,\n        sets: [6,6,6,6,12]\n      }\n    },\n    3: {\n      primary: {\n        percent: 80,\n        sets: [3,3,3,3,6]\n      },\n      auxiliary: {\n        percent: 70,\n        sets: [5,5,5,5,10]\n      }\n    },\n    4: {\n      primary: {\n        percent: 72.5,\n        sets: [5,5,5,5,9]\n      },\n      auxiliary: {\n        percent: 62.5,\n        sets: [7,7,7,7,13]\n      }\n    },\n    5: {\n      primary: {\n        percent: 77.5,\n        sets: [4,4,4,4,7]\n      },\n      auxiliary: {\n        percent: 67.5,\n        sets: [6,6,6,6,11]\n      }\n    },\n    6: {\n      primary: {\n        percent: 82.5,\n        sets: [3,3,3,3,5]\n      },\n      auxiliary: {\n        percent: 72.5,\n        sets: [5,5,5,5,9]\n      }\n    },\n    7: {\n      primary: {\n        percent: 60,\n        sets: [5,5,5,5,5]\n      },\n      auxiliary: {\n        percent: 50,\n        sets: [5,5,5,5,5]\n      }\n    },\n    8: {\n      primary: {\n        percent: 75,\n        sets: [4,4,4,4,8]\n      },\n      auxiliary: {\n        percent: 65,\n        sets: [6,6,6,6,12]\n      }\n    },\n    9: {\n      primary: {\n        percent: 80,\n        sets: [3,3,3,3,6]\n      },\n      auxiliary: {\n        percent: 70,\n        sets: [5,5,5,5,10]\n      }\n    },\n    10: {\n      primary: {\n        percent: 85,\n        sets: [2,2,2,2,4]\n      },\n      auxiliary: {\n        percent: 75,\n        sets: [4,4,4,4,8]\n      }\n    },\n    11: {\n      primary: {\n        percent: 77.5,\n        sets: [4,4,4,4,8]\n      },\n      auxiliary: {\n        percent: 67.5,\n        sets: [7,7,7,7,13]\n      }\n    },\n    12: {\n      primary: {\n        percent: 82.5,\n        sets: [3,3,3,3,5]\n      },\n      auxiliary: {\n        percent: 72.5,\n        sets: [5,5,5,5,9]\n      }\n    },\n    13: {\n      primary: {\n        percent: 87.5,\n        sets: [2,2,2,2,3]\n      },\n      auxiliary: {\n        percent: 67.5,\n        sets: [4,4,4,4,7]\n      }\n    },\n    14: {\n      primary: {\n        percent: 60,\n        sets: [5,5,5,5,5]\n      },\n      auxiliary: {\n        percent: 50,\n        sets: [5,5,5,5,5]\n      }\n    },\n    15: {\n      primary: {\n        percent: 80,\n        sets: [3,3,3,3,6]\n      },\n      auxiliary: {\n        percent: 70,\n        sets: [5,5,5,5,10]\n      }\n    },\n    16: {\n      primary: {\n        percent: 85,\n        sets: [2,2,2,2,4]\n      },\n      auxiliary: {\n        percent: 75,\n        sets: [4,4,4,4,8]\n      }\n    },\n    17: {\n      primary: {\n        percent: 90,\n        sets: [1,1,1,1,2]\n      },\n      auxiliary: {\n        percent: 80,\n        sets: [3,3,3,3,6]\n      }\n    },\n    18: {\n      primary: {\n        percent: 85,\n        sets: [3,3,3,3,5]\n      },\n      auxiliary: {\n        percent: 75,\n        sets: [5,5,5,5,9]\n      }\n    },\n    19: {\n      primary: {\n        percent: 90,\n        sets: [2,2,2,2,3]\n      },\n      auxiliary: {\n        percent: 80,\n        sets: [4,4,4,4,7]\n      }\n    },\n    20: {\n      primary: {\n        percent: 95,\n        sets: [1,1,1,1,1]\n      },\n      auxiliary: {\n        percent: 85,\n        sets: [3,3,3,3,5]\n      }\n    },\n    21: {\n      primary: {\n        percent: 60,\n        sets: [5,5,5,5,5]\n      },\n      auxiliary: {\n        percent: 50,\n        sets: [5,5,5,5,5]\n      }\n    },\n  }\n}\n\n\nexport const SBS_RTF: program = {\n  name: 'Stronger by Science - Reps to Failure',\n  movements: ['p1', 'p2', 'p3', 'p4', 'p1a1', 'p1a2', 'p2a1', 'p2a1', 'p3a1', 'p4a1'],\n  daysPerWeek: {\n    4: {\n      1: ['p1', 'p2a2', 'p3a1'],\n      2: ['p2', 'p1a1', 'p4a1'],\n      3: ['p3', 'p2a1'],\n      4: ['p4', 'p1a2']\n    }\n  },\n  setScheme: SBS_RTF_SET_SCHEME\n}","export const titleCaseString = (input: string): string => {\n  return input\n    .split(' ')\n    .map((word: string) => {\n      return word.length === 1 ? word.toUpperCase() : word[0].toUpperCase() + word.slice(1)\n    })\n    .join(' ')\n}","import { liftName, profile } from '../profile';\nimport { program, weightScheme } from '../workout';\n\nexport type workout = {\n  weight: number;\n  name: liftName;\n  sets: number[];\n}\n\nexport const roundWeight = (weight: number, profile: profile): number => {\n  return Math.round((weight + 5 )/ 10) * 10 + 5;\n}\n\nexport const getCurrentWorkout = (profile: profile): workout[] => {\n  return getWorkoutForDay(profile.programSettings.week, profile.programSettings.day, profile);\n};\n\nexport const getLastWorkout = (profile: profile): workout[] => {\n  let week = profile.programSettings.week;\n  let day = profile.programSettings.day;\n\n  if (day === 1) {\n    week -= 1;\n  } else {\n    day -= 1;\n  }\n\n  return getWorkoutForDay(week, day, profile);\n}\n\nexport const getWorkoutForDay = (week: number, day: number, profile: profile): workout[] => {\n  const weightScheme: weightScheme = profile.program.setScheme.weeks[week];\n  // TODO: Add setting to profile page for days/week setting\n  const todayLifts: string[] = profile.program.daysPerWeek[profile.programSettings.daysPerWeek][day];\n  return todayLifts.map((lift: string) => {\n    const liftType = lift.length === 2 ? 'primary' : 'auxiliary';\n    \n    const specificLift = profile.programSettings.lifts[lift];\n    if (!specificLift) throw new Error(`No lift designated for: ${lift}`)\n\n    const liftDetails = profile.lifts[specificLift]\n    if (!liftDetails) throw new Error(`Lift not set up in profile: ${lift}`)\n\n    return {\n      weight: roundWeight(\n        liftDetails[liftDetails.length - 1].weight * (weightScheme[liftType].percent / 100),\n        profile\n      ),\n      name: specificLift,\n      sets: weightScheme[liftType].sets\n    };\n  });\n}","import { Grid, Typography } from '@mui/material';\n\nimport { myProfile } from '../profile';\nimport { titleCaseString } from '../util/textUtil';\nimport { getCurrentWorkout, getLastWorkout, workout } from '../util/workoutUtil';\n\nconst styles = {\n  backgroundStyle: {\n    height: '100%',\n    width: '100%'\n  },\n  boxStyle: {\n    backgroundColor: '#EBEBEB',\n    padding: '40px'\n  },\n  boxLeft: {\n    paddingRight: '20px',\n  },\n  boxRight: {\n    paddingLeft: '20px',\n  },\n  dashboardContent: {\n    backgroundColor: '#FFF',\n    border: '1px solid #BBB',\n    height: '100%',\n    paddingBottom: '20px'\n  },\n  dashboardBoxTitle: {\n    borderBottom: '1px solid #4F4F4F',\n    margin: '10px',\n    fontSize: '1.5em',\n    color: '#4F4F4F',\n  },\n  workoutPreviewContainer: {\n    padding: '10px'\n  },\n  workoutTitle: {\n    fontSize: '1.125em',\n    padding: '0px',\n    width: '100%',\n    marginBottom: '-2px'\n  },\n  workoutWeight: {\n    fontSize: '1em',\n    padding: '0px',\n    width: '100%'\n  }\n}\n\nexport const Home = () => {\n  const todaysWorkout: workout[] = getCurrentWorkout(myProfile);\n  const yesterdaysWorkout: workout[] = getLastWorkout(myProfile);\n\n  return (\n    <Grid container sx={styles.backgroundStyle}>\n      <Grid item sx={{...styles.boxStyle, ...styles.boxLeft}} xs={12} sm={6}>\n        <Grid sx={styles.dashboardContent}>\n          <Typography variant=\"h2\" sx={styles.dashboardBoxTitle}>Last Workout</Typography>\n          {yesterdaysWorkout && yesterdaysWorkout.map((workout: workout) => (\n            <Grid item container sx={styles.workoutPreviewContainer} key={workout.name}>\n              <Typography sx={styles.workoutTitle}>{titleCaseString(workout.name)}</Typography>\n              <Typography sx={styles.workoutWeight}>{workout.weight + ' lbs'}</Typography>\n              {workout.sets.join(', ')}\n            </Grid>\n            )\n          )}\n        </Grid>\n      </Grid>\n      <Grid item sx={{...styles.boxStyle, ...styles.boxRight}} xs={12} sm={6}>\n        <Grid sx={styles.dashboardContent}>\n          <Typography variant=\"h2\" sx={styles.dashboardBoxTitle}>Next Workout</Typography>\n          {todaysWorkout && todaysWorkout.map((workout: workout) => (\n            <Grid item container sx={styles.workoutPreviewContainer} key={workout.name}>\n              <Typography sx={styles.workoutTitle}>{titleCaseString(workout.name)}</Typography>\n              <Typography sx={styles.workoutWeight}>{workout.weight + ' lbs'}</Typography>\n              {workout.sets.join(', ')}\n            </Grid>\n            )\n          )}\n        </Grid>\n      </Grid>\n      {/* <Grid sx={styles.boxStyle} xs={12} sm={6}>\n        Starting Maxes\n      </Grid>\n      <Grid sx={styles.boxStyle} xs={12} sm={6}>\n        Recent Maxes\n      </Grid>\n      <Grid sx={styles.boxStyle} xs={12} sm={6}>\n        Peak Maxes\n      </Grid>\n      <Grid sx={styles.boxStyle} xs={12} sm={6}>\n        Rate of Gains\n      </Grid> */}\n    </Grid>\n  );\n};","export const Calendar = () => {\n  return (\n    <div>Calendar</div>\n  );\n};","import React from 'react';\n\nexport const Programs = () => {\n  return (\n    <div> Programs Page</div>\n  );\n};","import React, { useState } from 'react';\nimport { Grid, FormControl, InputLabel, MenuItem, Select, Typography } from '@mui/material';\n\nimport { myProfile } from '../profile';\nimport { getCurrentWorkout, getWorkoutForDay, workout } from '../util/workoutUtil';\nimport { useEffect } from 'react';\nimport { titleCaseString } from '../util/textUtil';\nimport { NumberLiteralType } from 'typescript';\n\nconst styles = {\n  page: {\n    padding: '20px'\n  },\n  contentContainer: {\n    backgroundColor: 'white',\n    border: '1px solid #BBB',\n    margin: 'auto',\n    maxWidth: '800px'\n  },\n  workoutContainerTitle: {\n    borderBottom: '1px solid #4F4F4F',\n    margin: '10px',\n    color: '#4F4F4F',\n    width: '100%',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  workoutTitle: {\n    fontSize: '2em',\n  },\n  daySelector: {\n    justifyContent: 'center',\n    padding: '5px'\n  },\n  dayDropdown: {\n    marginLeft: '10px',\n    marginRight: '10px',\n    marginBottom: '5px'\n  },\n  dropdown: {\n    backgroundColor: 'white'\n  },\n  dropdownContainer: {\n  },\n  movementsContainer: {\n    justifyContent: 'space-between',\n    padding: '10px'\n  },\n  movementName: {\n    fontSize: '1.125em',\n    padding: '0px',\n    width: '100%',\n    marginBottom: '-2px'\n  },\n  movementWeight: {\n    fontSize: '1em',\n    padding: '0px',\n    width: '100%'\n  },\n  setCounter: {\n    border: '1px solid #AAA',\n    height: '40px',\n    width: '40px',\n    borderRadius: '20px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '0 5px 0 5px'\n  },\n  setContainer: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    cursor: 'pointer'\n  },\n  completedSet: {\n    backgroundColor: '#0bdd0861'\n  }\n}\n\nexport const Workout = () => {\n  const [week, setWeek]: [string | number, Function] = useState(myProfile.programSettings.week);\n  const [day, setDay]: [string | number, Function] = useState(myProfile.programSettings.day);\n  const [currentWorkout, setCurrentWorkout]: [workout[] | undefined,  Function] = useState();\n  const [completedSets, setCompletedSets]: [{[key: string]: number[]}, Function] = useState({});\n\n  useEffect(() => {\n    setCurrentWorkout(getWorkoutForDay(week, day, myProfile));\n  }, [week, day])\n\n  const updateSet = (movement: string, setNumber: number) => {\n    if (!completedSets[movement]) {\n      completedSets[movement] = [setNumber];\n    } else if (!completedSets[movement].includes(setNumber)) {\n      completedSets[movement].push(setNumber);\n    } else {\n      completedSets[movement] = completedSets[movement].filter((val: number) => val !== setNumber);\n    }\n    \n    setCompletedSets({...completedSets});\n  }\n\n  return (\n    <Grid container sx={styles.page}>\n      <Grid container sx={styles.contentContainer}>\n        <Grid container sx={styles.workoutContainerTitle}>\n          <Typography sx={styles.workoutTitle}>Workout</Typography>\n          <Grid item sx={styles.dropdownContainer}>\n            <FormControl variant=\"standard\" sx={styles.dayDropdown}>\n              <InputLabel id=\"week-select-label\">Week</InputLabel>\n              <Select\n                labelId=\"week-select-label\"\n                id=\"week-select\"\n                value={week}\n                label=\"Week\"\n                onChange={(event) => setWeek(event.target.value)}\n              >\n                {Object.keys(myProfile.program.setScheme.weeks).map((weekNumber: string) => (\n                  <MenuItem key={weekNumber} value={parseInt(weekNumber)}>{parseInt(weekNumber)}</MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl variant=\"standard\" sx={styles.dayDropdown}>\n              <InputLabel id=\"day-select-label\">Day</InputLabel>\n              <Select\n                labelId=\"day-select-label\"\n                id=\"day-select\"\n                value={day}\n                label=\"Day\"\n                onChange={(event) => setDay(event.target.value)}\n              >\n                {Array.from(Array(myProfile.programSettings.daysPerWeek).keys())\n                  .map((val: number) => (\n                    <MenuItem key={val} value={val + 1}>{val + 1}</MenuItem>\n                  )\n                )}\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        {currentWorkout && currentWorkout.map((workout: workout) => (\n          <Grid item container sx={styles.movementsContainer} key={workout.name}>\n            <Grid item>\n              <Typography sx={styles.movementName}>{titleCaseString(workout.name)}</Typography>\n              <Typography sx={styles.movementWeight}>{workout.weight + ' lbs'}</Typography>\n            </Grid>\n            <Grid item sx={styles.setContainer}>\n              {workout.sets.map((set: number, index: number) => {\n                const completed = completedSets[workout.name] && completedSets[workout.name].includes(index);\n                console.log('# Completed Sets #', completedSets);\n                console.log('Set Completed 1? ', completedSets[workout.name])\n                console.log('Set Completed 3? ', completed)\n                return (\n                  <Grid item sx={{...styles.setCounter, ...(completed ? styles.completedSet : {})}} onClick={() => updateSet(workout.name, index)}>{set}</Grid>\n                )\n              })}\n            </Grid>\n          </Grid>\n          )\n        )}\n      </Grid>\n    </Grid>\n  )\n};","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { NavBar } from './NavBar/NavBar';\nimport { Home } from './Home/Home';\nimport { Calendar } from './Calendar/Calendar';\nimport { Programs } from './Programs/Programs';\nimport { Workout } from './Workout/Workout';\nimport './app.css';\n\nfunction App() {\n  return (\n    <div>\n      <Router >\n        <NavBar />\n        <Switch>\n          <Route path=\"/calendar\">\n            <Calendar />\n          </Route>\n          <Route path=\"/programs\">\n            <Programs />\n          </Route>\n          <Route path=\"/workout\">\n            <Workout />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}